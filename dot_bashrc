# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples
# Enable the subsequent settings only in interactive sessions
case $- in
*i*) ;;
*) return ;;
esac

export MY_SHELL=bash
export BASH_SILENCE_DEPRECATION_WARNING=1

export GOROOT=$HOME/.local/go
export GOPROXY="https://proxy.golang.org|direct"
export GO111MODULE="on"

# Determine OS
OS_TYPE="$(uname -s)"

# Fallback for XDG_RUNTIME_DIR on macOS
if [[ "$OS_TYPE" == "Darwin" ]]; then
  export XDG_RUNTIME_DIR="${TMPDIR:-/tmp/}xdg-${UID}"
else
  export XDG_RUNTIME_DIR="/run/user/$UID"
fi

mkdir -p $XDG_RUNTIME_DIR

export XDG_CONFIG_HOME=${HOME}/.config
export XDG_CACHE_HOME=${HOME}/.cache
export XDG_DATA_HOME=${HOME}/.local/share
export XDG_STATE_HOME=${HOME}/.local/state
# D-Bus session bus address (mostly relevant to Linux)
if [[ "$OS_TYPE" != "Darwin" ]]; then
  export DBUS_SESSION_BUS_ADDRESS="unix:path=${XDG_RUNTIME_DIR}/bus"
fi

export LANG=en_US.UTF-8
export VISUAL=nvim
export EDITOR="$VISUAL"
export GIT_SSH_COMMAND="ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i ${HOME}/.ssh/id_ed25519"

export DOCKER_CLI_EXPERIMENTAL="enabled"
export GS_OPTIONS="-sPAPERSIZE=a4"
export MY_SHELL="$(ps -p $$ -o comm= | sed 's/^-//')" # old only linux basename $(readlink /proc/$$/exe)
export TMUX_TMPDIR="${XDG_RUNTIME_DIR:-"/run/user/$(id -u)"}"

if ! pgrep -u "$USER" ssh-agent > /dev/null; then
    ssh-agent > "$XDG_RUNTIME_DIR/ssh-agent.env"
fi
if [[ ! "$SSH_AUTH_SOCK" ]]; then
    source "$XDG_RUNTIME_DIR/ssh-agent.env" >/dev/null
fi

# # # prompt reset
# unset PROMPT_COMMAND
# # # Below is a bad example of PS1:
# # #PS1="\e[1;3;37m\s\e[m\e[1;37m:\e[m\e[1;33m\w\e[m \e[1;32m\u\e[m\e[1;37m\$\e[m "
# # # Better enclose non-printable sequences in \[ and \]. \e is the same as \033.
PS1="\
\[\033[01;32m\]\u\[\033[00m\]\
\[\033[01;37m\]@\[\033[00m\]\
\[\033[01;03;37m\]\h\[\033[00m\]\
\[\033[01;37m\]:\[\033[00m\]\
\[\033[01;33m\]\w\[\033[00m\] \
\[\033[01;37m\]\$\[\033[00m\] "

# env-secrets
[ -f "$HOME/.env-secrets" ] && source "$HOME/.env-secrets"

for script in "$HOME/.env-secrets.d/"*.sh; do [ -f "$script" ] && source "$script"; done

[ -f ~/.bw_session ] && source ~/.bw_session
[ -f $HOME/.cargo/env ] && source $HOME/.cargo/env
[ -f ~/Vaults/work/.key_values ] && source ~/Vaults/work/.key_values

type direnv >/dev/null 2>&1 && source <(direnv hook $MY_SHELL)

HISTCONTROL=ignoredups:ignorespace
HISTFILESIZE=100000
HISTSIZE=10000
export HISTIGNORE="ls:ps:history:htop:df:lens"

shopt -s histappend
shopt -s checkwinsize
shopt -s extglob
shopt -s globstar
shopt -s checkjobs

alias ...='cd ../..'
type bat >/dev/null 2>&1 && alias cat='bat -p'
alias g=git
type nvim >/dev/null 2>&1 && alias vim=nvim
type nvim >/dev/null 2>&1 && export MANPAGER='nvim +Man!' || export MANPAGER='less -s -M +Gg'
type uv >/dev/null 2>&1 && export UV_IS_HERE="uv" || export UV_IS_HERE=""

if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  elif [ -f /opt/homebrew/etc/profile.d/bash_completion.sh ]; then
    . "/opt/homebrew/etc/profile.d/bash_completion.sh"
  fi
fi

[ -f ~/.bash_aliases ] && source ~/.bash_aliases
[ -f ~/.bash_completion ] && source ~/.bash_completion
[ -f ~/.shell_aliases ] && source ~/.shell_aliases
[ -f ~/.shell_completion ] && source ~/.shell_completion

type starship >/dev/null 2>&1 && source <(starship init $MY_SHELL)

if [ -f ${HOME}/.local/google-cloud-sdk/path.bash.inc ]; then . ${HOME}/.local/google-cloud-sdk/path.bash.inc; fi

# The next line enables shell command completion for gcloud.
if [ -f ${HOME}/.local/google-cloud-sdk/completion.bash.inc ]; then . ${HOME}/.local/google-cloud-sdk/completion.bash.inc; fi

# ex: ts=4 sw=4 et filetype=sh
